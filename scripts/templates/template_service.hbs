// @ts-ignore
import { {{ TYPE }} } from 'google-ads-node/build/lib/resources'

import Service, { Mutation } from './service'
import { ServiceListOptions, ServiceCreateOptions } from '../types'

/**
* @constants
*/
const RESOURCE_URL_NAME = '{{ RESOURCE_URL_NAME }}'
const MUTATE_METHOD = '{{ MUTATE_METHOD }}'
const MUTATE_REQUEST = '{{ MUTATE_REQUEST }}'
const OPERATION_REQUEST = '{{ OPERATION_REQUEST }}'
const GET_METHOD = '{{ GET_METHOD }}'
const GET_REQUEST = '{{ GET_REQUEST }}'
const RESOURCE = '{{ RESOURCE }}'

export default class {{ TYPE }}Service extends Service {
public async get(id: number | string): Promise<{{ TYPE }}> {
    return this.serviceGet({
    request: GET_REQUEST,
    resource: `${RESOURCE_URL_NAME}/${id}`,
    method: GET_METHOD,
    entity_id: id,
    }) as {{ TYPE }}
    }

    public async list(options?: ServiceListOptions): Promise<Array<{ {{ ENTITY }}: {{ TYPE }} }>> {
        return this.getListResults('{{ ENTITY }}', options)
        }

        public async create(
        {{ PARAM }}: {{ TYPE }} | Array<{{ TYPE }}>,
            options?: ServiceCreateOptions
            ): Promise<Mutation> {
                return this.serviceCreate({
                request: MUTATE_REQUEST,
                operation: OPERATION_REQUEST,
                mutate: MUTATE_METHOD,
                entity: [RESOURCE, {{ PARAM }}],
                ...options,
                })
                }

                public async update(
                {{ PARAM }}: {{ TYPE }} | Array<{{ TYPE }}>,
                    options?: ServiceCreateOptions
                    ): Promise<Mutation> {
                        return this.serviceUpdate({
                        request: MUTATE_REQUEST,
                        operation: OPERATION_REQUEST,
                        mutate: MUTATE_METHOD,
                        entity: [RESOURCE, {{ PARAM }}],
                        ...options,
                        })
                        }

                        public async delete(id: number | string, options?: ServiceCreateOptions) {
                        return this.serviceDelete({
                        request: MUTATE_REQUEST,
                        operation: OPERATION_REQUEST,
                        mutate: MUTATE_METHOD,
                        resource: `${RESOURCE_URL_NAME}/${id}`,
                        entity_id: id,
                        ...options,
                        })
                        }
                        }